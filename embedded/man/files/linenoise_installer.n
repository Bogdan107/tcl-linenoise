'\"
'\" Generated from file '/home/aku/Projects/Linenoise/dev-tcl/embedded/man/files/linenoise_installer\&.n' by tcllib/doctools with format 'nroff'
'\" Copyright (c) 2013 Andreas Kupries
'\"
'\" The definitions below are for supplemental macros used in Tcl/Tk
'\" manual entries.
'\"
'\" .AP type name in/out ?indent?
'\"	Start paragraph describing an argument to a library procedure.
'\"	type is type of argument (int, etc.), in/out is either "in", "out",
'\"	or "in/out" to describe whether procedure reads or modifies arg,
'\"	and indent is equivalent to second arg of .IP (shouldn't ever be
'\"	needed;  use .AS below instead)
'\"
'\" .AS ?type? ?name?
'\"	Give maximum sizes of arguments for setting tab stops.  Type and
'\"	name are examples of largest possible arguments that will be passed
'\"	to .AP later.  If args are omitted, default tab stops are used.
'\"
'\" .BS
'\"	Start box enclosure.  From here until next .BE, everything will be
'\"	enclosed in one large box.
'\"
'\" .BE
'\"	End of box enclosure.
'\"
'\" .CS
'\"	Begin code excerpt.
'\"
'\" .CE
'\"	End code excerpt.
'\"
'\" .VS ?version? ?br?
'\"	Begin vertical sidebar, for use in marking newly-changed parts
'\"	of man pages.  The first argument is ignored and used for recording
'\"	the version when the .VS was added, so that the sidebars can be
'\"	found and removed when they reach a certain age.  If another argument
'\"	is present, then a line break is forced before starting the sidebar.
'\"
'\" .VE
'\"	End of vertical sidebar.
'\"
'\" .DS
'\"	Begin an indented unfilled display.
'\"
'\" .DE
'\"	End of indented unfilled display.
'\"
'\" .SO
'\"	Start of list of standard options for a Tk widget.  The
'\"	options follow on successive lines, in four columns separated
'\"	by tabs.
'\"
'\" .SE
'\"	End of list of standard options for a Tk widget.
'\"
'\" .OP cmdName dbName dbClass
'\"	Start of description of a specific option.  cmdName gives the
'\"	option's name as specified in the class command, dbName gives
'\"	the option's name in the option database, and dbClass gives
'\"	the option's class in the option database.
'\"
'\" .UL arg1 arg2
'\"	Print arg1 underlined, then print arg2 normally.
'\"
'\" RCS: @(#) $Id: man.macros,v 1.1 2009/01/30 04:56:47 andreas_kupries Exp $
'\"
'\"	# Set up traps and other miscellaneous stuff for Tcl/Tk man pages.
.if t .wh -1.3i ^B
.nr ^l \n(.l
.ad b
'\"	# Start an argument description
.de AP
.ie !"\\$4"" .TP \\$4
.el \{\
.   ie !"\\$2"" .TP \\n()Cu
.   el          .TP 15
.\}
.ta \\n()Au \\n()Bu
.ie !"\\$3"" \{\
\&\\$1	\\fI\\$2\\fP	(\\$3)
.\".b
.\}
.el \{\
.br
.ie !"\\$2"" \{\
\&\\$1	\\fI\\$2\\fP
.\}
.el \{\
\&\\fI\\$1\\fP
.\}
.\}
..
'\"	# define tabbing values for .AP
.de AS
.nr )A 10n
.if !"\\$1"" .nr )A \\w'\\$1'u+3n
.nr )B \\n()Au+15n
.\"
.if !"\\$2"" .nr )B \\w'\\$2'u+\\n()Au+3n
.nr )C \\n()Bu+\\w'(in/out)'u+2n
..
.AS Tcl_Interp Tcl_CreateInterp in/out
'\"	# BS - start boxed text
'\"	# ^y = starting y location
'\"	# ^b = 1
.de BS
.br
.mk ^y
.nr ^b 1u
.if n .nf
.if n .ti 0
.if n \l'\\n(.lu\(ul'
.if n .fi
..
'\"	# BE - end boxed text (draw box now)
.de BE
.nf
.ti 0
.mk ^t
.ie n \l'\\n(^lu\(ul'
.el \{\
.\"	Draw four-sided box normally, but don't draw top of
.\"	box if the box started on an earlier page.
.ie !\\n(^b-1 \{\
\h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.el \}\
\h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\l'|0u-1.5n\(ul'
.\}
.\}
.fi
.br
.nr ^b 0
..
'\"	# VS - start vertical sidebar
'\"	# ^Y = starting y location
'\"	# ^v = 1 (for troff;  for nroff this doesn't matter)
.de VS
.if !"\\$2"" .br
.mk ^Y
.ie n 'mc \s12\(br\s0
.el .nr ^v 1u
..
'\"	# VE - end of vertical sidebar
.de VE
.ie n 'mc
.el \{\
.ev 2
.nf
.ti 0
.mk ^t
\h'|\\n(^lu+3n'\L'|\\n(^Yu-1v\(bv'\v'\\n(^tu+1v-\\n(^Yu'\h'-|\\n(^lu+3n'
.sp -1
.fi
.ev
.\}
.nr ^v 0
..
'\"	# Special macro to handle page bottom:  finish off current
'\"	# box/sidebar if in box/sidebar mode, then invoked standard
'\"	# page bottom macro.
.de ^B
.ev 2
'ti 0
'nf
.mk ^t
.if \\n(^b \{\
.\"	Draw three-sided box if this is the box's first page,
.\"	draw two sides but no top otherwise.
.ie !\\n(^b-1 \h'-1.5n'\L'|\\n(^yu-1v'\l'\\n(^lu+3n\(ul'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.el \h'-1.5n'\L'|\\n(^yu-1v'\h'\\n(^lu+3n'\L'\\n(^tu+1v-\\n(^yu'\h'|0u'\c
.\}
.if \\n(^v \{\
.nr ^x \\n(^tu+1v-\\n(^Yu
\kx\h'-\\nxu'\h'|\\n(^lu+3n'\ky\L'-\\n(^xu'\v'\\n(^xu'\h'|0u'\c
.\}
.bp
'fi
.ev
.if \\n(^b \{\
.mk ^y
.nr ^b 2
.\}
.if \\n(^v \{\
.mk ^Y
.\}
..
'\"	# DS - begin display
.de DS
.RS
.nf
.sp
..
'\"	# DE - end display
.de DE
.fi
.RE
.sp
..
'\"	# SO - start of list of standard options
.de SO
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 4c 8c 12c
.ft B
..
'\"	# SE - end of list of standard options
.de SE
.fi
.ft R
.LP
See the \\fBoptions\\fR manual entry for details on the standard options.
..
'\"	# OP - start of full description for a single option
.de OP
.LP
.nf
.ta 4c
Command-Line Name:	\\fB\\$1\\fR
Database Name:	\\fB\\$2\\fR
Database Class:	\\fB\\$3\\fR
.fi
.IP
..
'\"	# CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
'\"	# CE - end code excerpt
.de CE
.fi
.RE
..
.de UL
\\$1\l'|0\(ul'\\$2
..
.TH "linenoise_install_guide" n 1 doc "Tcl Line Editor"
.BS
.SH NAME
linenoise_install_guide \- Linenoise - The Installer's Guide
.SH DESCRIPTION
Welcome to Linenoise, a binding to Antirez's \fBlinenoise\fR
minimal line editor library, as modified and extended by Steve
Bennet of Workware\&.au
.PP
The audience of this document is anyone wishing to build the
package, for either themselves, or others\&.
.PP
For a developer intending to extend or modify the package we
additionally provide
.IP [1]
\fILinenoise - License\fR\&.
.IP [2]
\fILinenoise - The Developer's Guide\fR\&.
.PP
.PP
Please read \fILinenoise - How To Get The Sources\fR first, if that
was not done already\&. Here we assume that all the sources are already
available in a directory of your choice\&.
.PP
.SH REQUISITES
Before Linenoise can be build and used a number of requisites must be
installed\&. These are:
.IP [1]
The scripting language Tcl\&.
For details see \fBTcl\fR\&.
.IP [2]
The \fBcritcl\fR package (C embedding) for \fBTcl\fR\&.
For details see \fBCriTcl\fR\&.
.IP [3]
The \fBkettle\fR package and application for \fBTcl\fR\&.
For details see \fBKettle\fR\&.
.PP
This list assumes that the machine where Linenoise is to be installed
is essentially clean\&. Of course, if parts of the dependencies listed
below are already installed the associated steps can be skipped\&. It is
still recommended to read their sections though, to validate that the
dependencies they talk about are indeed installed\&.
.SS TCL
As we are building a Tcl package that should be pretty much obvious
that a working Tcl installation is needed, and I will not belabor the
point\&.
.PP
Out of the many use whatever you are comfortable with, as long
as it provides Tcl 8\&.5, or higher\&.
.PP
This may a Tcl installation provided by your operating system
distribution, from a distribution-independent vendor, or built by
yurself\&.
.PP
Myself, I used \fIActiveState's\fR [http://www\&.activestate\&.com]
ActiveTcl 8\&.5 distribution during development of the binding, as I am
most familiar with it\&.
.PP
\fI(Disclosure: I, Andreas Kupries, work for ActiveState, maintaining ActiveTcl and TclDevKit for them)\&.\fR
.PP
This distribution can be found at
\fIhttp://www\&.activestate\&.com/activetcl\fR\&. Retrieve the archive of
ActiveTcl 8\&.5 for your platform and install it as directed by
ActiveState\&.
.PP
Assuming that ActiveTcl got installed I usually run the command
.CS


    teacup update

.CE
to install all packages ActiveState provides, and the kitchensink, as
the distribution itself usually contains only the ost important set of
packages\&. This ensures that the dependencies for Critcl are all
present, and more\&.
.PP
If that is not to your liking you have to read the sections for
Critcl to determine the exact set of packages required, and install
only these using
.CS


    teacup install $packagename

.CE
.PP
Both \fBteacup\fR commands above assume that ActiveState's
TEApot repository at \fIhttp://teapot\&.activestate\&.com\fR is in the
list of repositories accessible to \fBteacup\fR\&. This is automatically
ensured for the ActiveTcl distribution\&. Others may have to run
.CS


    teacup archive add http://teapot\&.activestate\&.com

.CE
to make this happen\&.
.PP
For those wishing to build Tcl/Tk on their own, their sources
can be found at
.TP
Tcl
\fIhttp://core\&.tcl\&.tk/tcl/\fR
.TP
Tk
\fIhttp://core\&.tcl\&.tk/tk/\fR
.PP
.SS CRITCL
To build the linenoise binding the tool \fBcritcl\fR is required\&.
.PP
The build system accept it either as an application found in
the PATH, or as a Tcl package available to the \fBtclsh\fR used to
run their build & installation processes\&.
.PP
We \fImust\fR have version 3\&.1 or higher\&.
.PP
Its github repository can be found at
\fIhttp://andreas-kupries\&.github\&.com/critcl\fR\&.
.PP
At the above url is also an explanation on how to build and
install CriTcl, including a list of its dependencies\&.
.PP
Its instructions will not be repeated here\&. If there are
problems with their directions please file a bug against the critcl
project, and not tcl-linenoise\&.
.SS KETTLE
To build Linenoise the build support package \fBkettle\fR is
required\&.
.PP
This package must be available to the \fBtclsh\fR used to
run Linenoise's build & installation process, and the \fBtclsh\fR
used to run scripts requiring Linenoise\&.
.PP
Kettle's fossil repository can be found at
\fIhttp://chiselapp\&.com/user/andreas_kupries/repository/Kettle/home\fR\&.
.PP
The relevant repository branch is \fItrunk\fR\&.
.PP
Kettle has a build and installation guide much like this one for
Linenoise, which can be found at the above site and explains how to
retrieve its sources and build the package, which dependencies are
required, etc\&. The direct link to this guide is
\fIhttp://chiselapp\&.com/user/andreas_kupries/repository/Kettle/doc/tip/embedded/www/doc/files/kettle_installer\&.html\fR
.PP
Its instructions will not be repeated here\&. If there are
problems with their directions please file a bug against the kettle
project, and not Linenoise\&.
.SH "BUILD & INSTALLATION"
To install linenoise simply run
.CS


    /path/to/tclsh /path/to/tcl-linenoise/build\&.tcl install

.CE
where "\fI/path/to/tclsh\fR" is the tclsh of your Tcl installation, and
"\fI/path/to/tcl-linenoise\fR" the location of the binding's sources on
your system\&. The linenoise sources on the other hand are expected to
be either a sibling directory to the binding's sources, or a
sub-directory in it\&. Regardless of location, this directory has to be
named "\fIlinenoise\fR"\&.
.PP
This builds the package and then places it into a directory where the
\fBtclsh\fR will find them\&.
.PP
On Windows you can invoke the file "\fIbuild\&.tcl\fR" with a
double-click\&.  This will pop up a small graphical interface for
entering the destination and performing the installation\&. This
handling of a double-click is restricted to Windows only however\&.
.PP
On unix the same GUI is acessible by invoking "\fIbuild\&.tcl\fR" with
the argument \fBgui\fR\&.
.PP
To get help about the methods of "\fIbuild\&.tcl\fR", and their complete
syntax, invoke  "\fIbuild\&.tcl\fR" with argument \fBhelp\fR, i\&.e\&., like
.CS


    /path/to/tclsh /path/to/tcl-linenoise/build\&.tcl help

.CE
.SH "BUILD VARIATIONS"
The previous section assumes that the underlying linenoise C library
sources were taken from \fIhttp://github\&.com/andreas-kupries/linenoise\fR\&.
If the C library came from \fIhttp://github\&.com/msteveb/linenoise\fR
instead then hidden input, i\&.e\&. password prompts and the like are not
supported\&.
To disable the support in the binding simply edit the file
"\fIlinenoise\&.tcl\fR" and change the setting of the flag variable
\fBhashidden\fR to \fBfalse\fR\&.
The remainder of the binding adapts automatically\&.
.SH AUTHORS
\fIAndreas Kupries\fR [https://github\&.com/andreas-kupries/] (Tcl Binding),
\fISteve Bennett\fR [https://github\&.com/msteveb/] (extended linenoise C library),
\fISalvatore Sanfilippo\fR [https://github\&.com/antirez/] (Antirez, original linenoise C library)\&.
.SH "BUGS, IDEAS, FEEDBACK"
This document, and the package it describes, will undoubtedly contain
bugs and other problems\&.
Please report them at the
\fIIssues tracker\fR [https://github\&.com/andreas-kupries/tcl-linenoise/issues]\&.
Ideas for enhancements you may have for either package, application,
and/or the documentation are also very welcome and should be reported
at the \fIIssues tracker\fR [https://github\&.com/andreas-kupries/tcl-linenoise/issues] as well\&.
.SH KEYWORDS
console, edit line, line editor, line reading, linenoise, raw mode, read line, terminal, tty
.SH CATEGORY
Binding
.SH COPYRIGHT
.nf
Copyright (c) 2013 Andreas Kupries

.fi